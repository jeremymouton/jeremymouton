{"2015-06-25-a-static-site-with-gulp":{"title":"On building a site with Gulp and Riot","slug":"on-building-a-static-site-with-gulp-and-riot","date":"2015-06-29 22:00","body":"<p><em>I have redesigned my personal site for the nth time now, and finally decided to include a blog. It will allow me to post on topics more or less related to web development and help me document some of the tricks I learn and have learned during my couple of years as a frontend web developer. I plan on keeping entries fairly short, with this first post being an exception.</em></p>\n<hr>\n<p>I wanted to use this first post as an opportunity to explain how I built this website and why I chose to set it up the way I did.</p>\n<p>The content and pages of this website are generated into static files using a set of <a href=\"//gulpjs.com/\">Gulp</a> tasks and then displayed on the frontend using <a href=\"//muut.com/riotjs/\">Riot</a>.</p>\n<h2 id=\"gulp\">Gulp</h2>\n<p>Gulp handles the &quot;backend&quot; side of the website. It is a javascript tool used to automate tasks. For this website, it is configured to build templates, process assets, and create JSON data for posts and projects.</p>\n<p>This is the gulp task used to generate JSON data from blog posts originally written in markdown:</p>\n<pre class=\"language-javascript\">\n<code>\n  var gulp     = require('gulp'),\n      gutil    = require('gulp-util'),\n      markdown = require('gulp-markdown-to-json');\n\n  gulp.task('posts', function() {\n    return gulp\n      .src(paths.posts + '/*.md')\n      .pipe(gutil.buffer())\n      .pipe(markdown('posts.json'))\n      .pipe(gulp.dest(paths.destination + '/json'));\n  });\n</code>\n</pre>\n\n<p>The task loops through the posts folder looking for markdown files, queues them, and turns them into a single JSON file ready to be consumed on the frontend.</p>\n<h2 id=\"riot\">Riot</h2>\n<p>Riot is a user-interface library for creating <a href=\"//webcomponents.org\">web components</a>, a topic I have been interested in lately and wanted to experiment with.</p>\n<p>One of its features is letting you create custom tags like this:<br></p>\n<pre class=\"language-markup\">\n<code>\n  &lt;google-analytics id=\"UA-XXXXXXX-XX\"&gt;\n</code>\n</pre>\n\n<p>This blog post is also rendered using a custom HTML tag <code>&lt;blog-posts&gt;</code>. It uses the JSON data generated using Gulp, and displays the most recent post along with a list of all posts.</p>\n<h2 id=\"why-not-use-wordpress-or-jekyll-\">Why not use Wordpress or Jekyll?</h2>\n<p>Publishing systems are fairly monolithic pieces of software. Most established options out there go well beyond the goals of this blog, so I decided to go another route and build my own system (for the 3rd or 4th time?).</p>\n<p>Platforms like Wordpress or Drupal are not optimized for a website of this scale. Jekyll is good alternative to my Gulp backend, but still offers more features than I need at this time. </p>\n<p>Until I find myself needing the more advanced features offered by other publishing platforms, I will likely stay with this extensible and minimalist system.</p>\n<p>You can find the source code on <a href=\"https://github.com/jeremymouton/jeremymouton\">Github</a>.</p>\n"}}